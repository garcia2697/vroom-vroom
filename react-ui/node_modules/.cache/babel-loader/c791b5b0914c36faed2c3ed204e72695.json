{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Desktop\\\\projects\\\\group-projects\\\\vroom-vroom\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Nav from \"./components/Nav/Nav\";\n// import Cats from './components/Cats'\nimport Login from './components/login/Login';\n// import Signup from './components/login/server'\nimport Cats from \"./components/gatos/gatos\";\nimport Dogs from \"./components/perros/perros\";\nimport Gallery from \"./components/Gallery\";\nimport AddCat from \"./components/form/addCat\";\nimport AddDog from \"./components/form/addDog\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:3001/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nconst App = () => {\n  _s();\n  const [pages] = useState([{\n    name: 'Log in',\n    description: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }, this)\n  },\n  // {name: 'Signup', description:<Signup></Signup>},\n  {\n    name: \"Home\",\n    description: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 34\n    }, this)\n  }, {\n    name: \"Dog\",\n    description: /*#__PURE__*/_jsxDEV(Dogs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }, this)\n  }, {\n    name: \"Cats\",\n    description: /*#__PURE__*/_jsxDEV(Cats, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }, this)\n  }, {\n    name: \"\",\n    description: /*#__PURE__*/_jsxDEV(AddCat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }, this)\n  }, {\n    name: \"\",\n    description: /*#__PURE__*/_jsxDEV(AddDog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }, this)\n  }]);\n  const [currentPage, setCurrentPage] = useState(pages[0]);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        pages: pages,\n        setCurrentPage: setCurrentPage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"form\",\n          onClick: () => {\n            setCurrentPage(pages[4]);\n          },\n          children: [\" \", \"Lost Cat?\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"form\",\n          onClick: () => {\n            setCurrentPage(pages[5]);\n          },\n          children: [\" \", \"Lost Dog?\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Gallery, {\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H7yZKhBIFvc3wScS6mm3tRp+S4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Nav","Login","Cats","Dogs","Gallery","AddCat","AddDog","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","client","cache","App","pages","name","description","currentPage","setCurrentPage"],"sources":["C:/Users/Luis/Desktop/projects/group-projects/vroom-vroom/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/header/Header\";\r\nimport Nav from \"./components/Nav/Nav\";\r\n// import Cats from './components/Cats'\r\nimport Login from './components/login/Login';\r\n// import Signup from './components/login/server'\r\nimport Cats from \"./components/gatos/gatos\";\r\nimport Dogs from \"./components/perros/perros\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport AddCat from \"./components/form/addCat\";\r\nimport AddDog from \"./components/form/addDog\";\r\n\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  HttpLink,\r\n  from,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\n\r\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\r\n  if (graphqlErrors) {\r\n    graphqlErrors.map(({ message, location, path }) => {\r\n      alert(`Graphql error ${message}`);\r\n    });\r\n  }\r\n});\r\n\r\n\r\nconst link = from([\r\n  errorLink,\r\n  new HttpLink({ uri: \"http://localhost:3001/graphql\" }),\r\n]);\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: link,\r\n});\r\n\r\n\r\nconst App = () => {\r\n  const [pages] = useState([\r\n    {name: 'Log in', description:<Login></Login>},\r\n    // {name: 'Signup', description:<Signup></Signup>},\r\n    { name: \"Home\", description: <Header></Header> },\r\n    { name: \"Dog\", description: <Dogs></Dogs> },\r\n    { name: \"Cats\", description: <Cats></Cats> },\r\n    { name: \"\", description: <AddCat></AddCat> },\r\n    { name: \"\", description: <AddDog></AddDog> },\r\n  ]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(pages[0]);\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <ApolloProvider client={client}>\r\n      <div>\r\n        {/* <Header/> */}\r\n        <Nav\r\n          pages={pages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n          \r\n        ></Nav>\r\n\r\n        <main>\r\n\r\n          <button id=\"form\"\r\n            onClick={() => {\r\n              setCurrentPage(pages[4]);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Lost Cat?{\" \"}\r\n          </button>\r\n\r\n          <button id=\"form\"\r\n            onClick={() => {\r\n              setCurrentPage(pages[5]);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Lost Dog?{\" \"}\r\n          </button>\r\n\r\n\r\n          <>\r\n            <Gallery currentPage={currentPage}></Gallery>\r\n          </>\r\n        </main>\r\n        {/* <Nav/> */}\r\n      </div>\r\n\r\n      {/* <Login/> */}\r\n    \r\n    </ApolloProvider>\r\n  ) \r\n};\r\n\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}